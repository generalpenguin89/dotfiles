# .zlogin
#
# .zlogin is sourced in login shells.  It should
# contain commands that should be executed only in
# login shells.  It should be used to set the terminal
# type and run a series of external commands (fortune,
# msgs, from, etc).
#
# Author: Patrick MacArthur
# (based on my bash_profile)

if [[ ! -o interactive ]]; then
	return
fi

if [[ -n "$DISPLAY" ]]; then
	echo X11 display is $DISPLAY
fi

# Ensure that we are using the correct TERM value.  Just using xterm is
# apparently bad.
# This code is borrowed from: http://vim.wikia.com/wiki/256_colors_in_vim
if [[ "$TERM" = "xterm" ]]; then
	if [[ -z "$COLORTERM" ]]; then
		if [[ -z "$XTERM_VERSION" ]]; then
			echo "Warning: Terminal wrongly calling itself 'xterm'."
		else
			case "$XTERM_VERSION" in
			"XTerm(256)") TERM="xterm-256color" ;;
			"XTerm(88)") TERM="xterm-88color" ;;
			"XTerm") ;;
			*)
				echo "Warning: Unrecognized XTERM_VERSION: $XTERM_VERSION"
				;;
			esac
		fi
	else
		case "$COLORTERM" in
		gnome-terminal)
			# Those crafty Gnome folks require you to check COLORTERM,
			# but don't allow you to just *favor* the setting over TERM.
			# Instead you need to compare it and perform some guesses
			# based upon the value. This is, perhaps, too simplistic.
			TERM="gnome-256color"
			;;
		*)
			echo "Warning: Unrecognized COLORTERM: $COLORTERM"
			;;
		esac
	fi
fi

# Make sure that our terminal is supported
SCREEN_COLORS=$(tput colors)
if [[ -z "$SCREEN_COLORS" ]]; then
	case "$TERM" in
	screen-*color-bce)
		echo "Unknown terminal $TERM. Falling back to 'screen-bce'."
		export TERM=screen-bce
		;;
	*-88color)
		echo "Unknown terminal $TERM. Falling back to 'xterm-88color'."
		export TERM=xterm-88color
		;;
	*-256color)
		echo "Unknown terminal $TERM. Falling back to 'xterm-256color'."
		export TERM=xterm-256color
		;;
	esac
	SCREEN_COLORS=$(tput colors)
fi
if [[ -z "$SCREEN_COLORS" ]]; then
	case "$TERM" in
	gnome*|xterm*|konsole*|aterm|[Ee]term)
		echo "Unknown terminal $TERM. Falling back to 'xterm'."
		export TERM=xterm
		;;
	rxvt*)
		echo "Unknown terminal $TERM. Falling back to 'rxvt'."
		export TERM=rxvt
		;;
	screen*)
		echo "Unknown terminal $TERM. Falling back to 'screen'."
		export TERM=screen
		;;
	esac
	SCREEN_COLORS=$(tput colors)
fi

# Show terminal type and setup terminal
echo "Terminal type is $TERM."
tset

# Set background color
if [[ -z "$TERMBG" && -f $HOME/.termbg.$TERM ]]; then
	source $HOME/.termbg.$TERM
fi
if [[ "z$TERMBG" == "zdark" || "z$TERMBG" == "zlight" ]]; then
	echo "Terminal background is $TERMBG."
else
	echo "Please set TERMBG=light or TERMBG=dark and run recolor."
fi
export TERMBG

# Let us know if we've got running screen sessions
if whence screen &>/dev/null; then
	screen -ls
fi

# Display something witty :)
if whence fortune &>/dev/null; then
	fortune
fi

